Design DB model for Guvi Zen class Student Collection Batch Collection Task Collection Mentor Collection
CREATE DATABASE zenassignemnt_guvi;
DROP TABLE STUDENT_COLLECTION;

ALTER TABLE STUDENT_COLLECTION MODIFY MOBILE INTEGER(20);

DROP TABLE BATCH_COLLECTION;
DROP TABLE TASK_COLLECTION;
DROP TABLE MENTOR_COLLECTION;
DROP TABLE STUDENT_COLLECTION;

CREATE TABLE STUDENT_COLLECTION(
    STUDENT_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    STUDENT_NAME TEXT,
    DOB DATE,
    ADDRESS VARCHAR(255),
    EMAIL VARCHAR(255),
    MOBILE BIGINT(10),
    BATCH_ID INTEGER,    
    ATTENTED_SESSION INTEGER,
    STATUS INTEGER(1),
    JOINED_DT DATE
);

ALTER TABLE STUDENT_COLLECTION ADD FOREIGN KEY (BATCH_ID) REFERENCES BATCH_COLLECTION(BATCH_ID);

CREATE TABLE BATCH_COLLECTION(
   BATCH_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
   COURSE_NAME TEXT,
   COURSE_FEE FLOAT,
   DURATION INTEGER,
   NO_OF_STUDENTS INTEGER,
   TOTAL_SESSIONS INTEGER,
   STATUS INTEGER,
   MENTOR_ID INTEGER
);

ALTER TABLE BATCH_COLLECTION ADD FOREIGN KEY (MENTOR_ID) REFERENCES MENTOR_COLLECTION(MENTOR_ID);

CREATE TABLE TASK_COLLECTION(
    TASK_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    STUDENT_ID INTEGER,
    TASK_NAME VARCHAR(255),
    MARKS INTEGER,
    STATUS INTEGER,
    SUBMITTED_DT DATETIME
);

ALTER TABLE TASK_COLLECTION ADD FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT_COLLECTION(STUDENT_ID);

CREATE TABLE MENTOR_COLLECTION(
    MENTOR_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    MENTOR_NAME TEXT,
    BATCH_ID INTEGER,
    STATUS INTEGER,
    CREATED_DT DATE
);

ALTER TABLE MENTOR_COLLECTION ADD FOREIGN KEY (BATCH_ID) REFERENCES BATCH_COLLECTION(BATCH_ID);

INSERT INTO STUDENT_COLLECTION (STUDENT_NAME,DOB,ADDRESS,EMAIL,MOBILE,ATTENTED_SESSION,STATUS,JOINED_DT) 
values ('VARUN','2022-04-23','Car Street','test1@gmail.com','7023456906','4','1','2021-11-20');

INSERT INTO BATCH_COLLECTION (COURSE_NAME,COURSE_FEE,DURATION,NO_OF_STUDENTS,TOTAL_SESSIONS,STATUS)
VALUES ('FULL STACK','85000','90','20','40','1');

INSERT INTO MENTOR_COLLECTION (MENTOR_NAME, BATCH_ID, STATUS, CREATED_DT) 
VALUES ('SIVA','1','1','2022-01-22');

INSERT INTO TASK_COLLECTION (STUDENT_ID, TASK_NAME, MARKS, STATUS,SUBMITTED_DT) 
VALUES ('1','MYSQL','8','1','2022-01-22');

UPDATE STUDENT_COLLECTION SET BATCH_ID = '1' WHERE STUDENT_ID = '1';
UPDATE BATCH_COLLECTION SET MENTOR_ID = '1' WHERE BATCH_ID = '1';

SELECT A.STUDENT_ID, A.STUDENT_NAME,B.COURSE_NAME,B.COURSE_FEE,C.MENTOR_ID,C.MENTOR_NAME,D.TASK_ID,D.TASK_NAME FROM student_collection A 
INNER JOIN batch_collection B ON A.BATCH_ID = B.BATCH_ID 
INNER JOIN mentor_collection C ON B.MENTOR_ID = C.MENTOR_ID
INNER JOIN task_collection D ON A.STUDENT_ID = D.STUDENT_ID;

CREATE VIEW FETCH_ALL_RECORD AS 
SELECT A.STUDENT_ID, A.STUDENT_NAME,B.COURSE_NAME,B.COURSE_FEE,C.MENTOR_ID,C.MENTOR_NAME,D.TASK_ID,D.TASK_NAME FROM student_collection A 
INNER JOIN batch_collection B ON A.BATCH_ID = B.BATCH_ID 
INNER JOIN mentor_collection C ON B.MENTOR_ID = C.MENTOR_ID
INNER JOIN task_collection D ON A.STUDENT_ID = D.STUDENT_ID;

SELECT * FROM FETCH_ALL_RECORD;
